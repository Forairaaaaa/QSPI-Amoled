[1/12] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/Amoled.cpp.obj
[2/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[3/12] Linking C static library esp-idf/usb/libusb.a
[4/12] Linking C static library esp-idf/main/libmain.a
[5/12] Performing build step for 'bootloader'
[1/1] cd /home/parker/projects/QSPI-Amoled/build/bootloader/esp-idf/esptool_py && /home/parker/.espressif/python_env/idf5.0_py3.8_env/bin/python /home/parker/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/parker/projects/QSPI-Amoled/build/bootloader/bootloader.bin
Bootloader binary size 0x56e0 bytes. 0x2920 bytes (32%) free.
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/Amoled.elf.dir/project_elf_src_esp32s3.c.obj
[8/10] Linking CXX executable Amoled.elf
[9/10] Generating binary image from built executable
esptool.py v4.5
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/parker/projects/QSPI-Amoled/build/Amoled.bin
[10/10] cd /home/parker/projects/QSPI-Amoled/build/esp-idf/esptool_py && /home/parker/.espressif/python_env/idf5.0_py3.8_env/bin/python /home/parker/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/parker/projects/QSPI-Amoled/build/partition_table/partition-table.bin /home/parker/projects/QSPI-Amoled/build/Amoled.bin
Amoled.bin binary size 0x331f0 bytes. Smallest app partition is 0x100000 bytes. 0xcce10 bytes (80%) free.
